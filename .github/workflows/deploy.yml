name: Deploy UTicTacToe Backend

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/utictactoe-backend:latest

      - name: Create .env file
        run: |
          echo "RECAPTCHA_SECRET_KEY=${{ secrets.RECAPTCHA_SECRET_KEY }}" > .env
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .env
          echo "DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" >> .env
          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> .env
          echo "SUPABASE_SERVICE_KEY=${{ secrets.SUPABASE_SERVICE_KEY }}" >> .env

      - name: Ensure app-network exists
        run: |
          docker network create app-network 2>/dev/null || true

      - name: Deploy backend service
        run: |
          # Pull latest image
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/utictactoe-backend:latest
          
          # Stop existing container
          docker-compose down || true
          
          # Start with latest image
          docker-compose up -d
          
          # Wait for backend to be ready
          sleep 10

      - name: Verify deployment
        run: |
          # Check if container is running
          if ! docker ps | grep -q "utictactoe-backend"; then
            echo "❌ Backend container is not running"
            docker-compose logs
            exit 1
          fi
          
          # Test health endpoint (if available)
          if docker exec utictactoe-backend curl -f http://localhost:5000/health > /dev/null 2>&1; then
            echo "✅ Backend health check passed"
          else
            echo "⚠️ Backend health check failed or endpoint not available"
          fi
          
          echo "✅ UTicTacToe backend deployed successfully"

      - name: Clean up old images
        run: |
          docker image prune -af --filter "until=24h" || true
